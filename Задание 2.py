import pygame
import math
from pygame.draw import *

pygame.init()

FPS = 30
screen = pygame.display.set_mode((556, 787))

#fon
rect(screen, (255, 255, 255), (0, 0, 556, 787))
rect(screen, (225, 225, 225), (0, 0, 556, 352))
#iglu
circle(screen, (225, 225, 225), (174, 454), 132)
circle(screen, (0, 0, 0), (174, 454), 132, 2)
rect(screen, (255, 255, 255), (42, 454, 264, 132))
line(screen, (0, 0, 0), (42, 454), (306, 454))
line(screen, (0, 0, 0), (54, 398), (292, 398))
line(screen, (0, 0, 0), (79, 362), (267, 362))
line(screen, (0, 0, 0), (118, 335), (230, 335))
line(screen, (0, 0, 0), (183, 323), (183, 335))
line(screen, (0, 0, 0), (135, 335), (135, 362))
line(screen, (0, 0, 0), (177, 335), (177, 362))
line(screen, (0, 0, 0), (218, 335), (218, 362))
line(screen, (0, 0, 0), (103, 362), (103, 398))
line(screen, (0, 0, 0), (160, 362), (160, 398))
line(screen, (0, 0, 0), (211, 362), (211, 398))
line(screen, (0, 0, 0), (256, 362), (256, 398))
line(screen, (0, 0, 0), (67, 398), (67, 454))
line(screen, (0, 0, 0), (130, 398), (130, 454))
line(screen, (0, 0, 0), (193, 398), (193, 454))
line(screen, (0, 0, 0), (242, 398), (242, 454))
line(screen, (0, 0, 0), (288, 398), (288, 454))
#koshka (cat) telo
ellipse(screen, (200, 200, 200), (83, 589, 100, 25))
ellipse(screen, (200, 200, 200), (49, 604, 60, 10))
polygon(screen, (200, 200, 200), [(102, 612), (91, 616), (82, 618), (75, 620), (61, 626), (61, 628), (81, 628), (101, 623), (113, 620), (120, 616), (121, 611)])
polygon(screen, (200, 200, 200), [(152, 613), (166, 625), (179, 633), (198, 642), (201, 642), (201, 639), (191, 630), (177, 620), (166, 613), (163, 610)])
polygon(screen, (200, 200, 200), [(170, 609), (188, 619), (211, 628), (219, 628), (219, 626), (209, 619), (194, 611), (183, 607), (179, 605)])
polygon(screen, (200, 200, 200), [(182, 604), (197, 602), (212, 596), (235, 586), (251, 574), (251, 571), (243, 571), (225, 576), (208, 583), (195, 589), (181, 597), (179, 600)])
#rybka (fish)
polygon(screen, (147, 172, 167), [(68, 580), (88, 586), (100, 600), (115, 600), (111, 609), (100, 600), (79, 594)])
polygon(screen, (0, 0, 0), [(68, 580), (88, 586), (100, 600), (115, 600), (111, 609), (100, 600), (79, 594)], 1)
polygon(screen, (213, 95, 95), [(74, 590), (73, 593), (86, 604), (81, 595)])
polygon(screen, (0, 0, 0), [(74, 590), (73, 593), (86, 604), (81, 595)], 1)
polygon(screen, (213, 95, 95), [(82, 583), (77, 577), (91, 578), (86, 584)])
polygon(screen, (0, 0, 0), [(82, 583), (77, 577), (91, 578), (86, 584)], 1)
circle(screen, (0, 0, 255), (78, 587), 3)
circle(screen, (0, 0, 0), (78, 587), 1)
#koshka (cat) golova
ellipse(screen, (200, 200, 200), (83, 574, 32, 20))
polygon(screen, (200, 200, 200), [(93, 574), (94, 569), (100, 574), (106, 574), (110, 570), (113, 580)])
ellipse(screen, (255, 255, 255), (85, 577, 8, 5))
ellipse(screen, (255, 255, 255), (96, 579, 8, 5))
ellipse(screen, (0, 0, 0), (89, 579, 4, 3))
ellipse(screen, (0, 0, 0), (100, 580, 4, 3))
ellipse(screen, (0, 0, 0), (88, 586, 3, 2))
line(screen, (255, 255, 255), (85, 589), (85, 592), 2)
line(screen, (255, 255, 255), (92, 591), (92, 594), 2)
#eskimos
ellipse(screen, (227, 222, 219), (393, 423, 95, 59))
ellipse(screen, (145, 124, 111), (365, 488, 60, 17))
polygon(screen, (145, 124, 111), [(472, 488), (477, 489), (490, 496), (501, 505), (509, 515), (509, 520), (505, 522), (498, 520), (489, 517), (482, 512)])
ellipse(screen, (145, 124, 111), (394, 577, 36, 14))
ellipse(screen, (145, 124, 111), (457, 580, 36, 12))
ellipse(screen, (145, 124, 111), (408, 543, 25, 45))
ellipse(screen, (145, 124, 111), (452, 543, 29, 45))
polygon(screen, (145, 124, 111), [(388, 565), (388, 553), (390, 541), (393, 526), (396, 511), (399, 500), (405, 486),
                                  (410, 477), (414, 470), (463, 472), (471, 479), (477, 489), (489, 516), (492, 529), (495, 544), (496, 565)])
rect(screen, (108, 93, 83), (388, 553, 110, 12))
rect(screen, (108, 93, 83), (427, 478, 26, 73))
ellipse(screen, (172, 157, 147), (405, 432, 71, 44))
ellipse(screen, (227, 219, 219), (416, 442, 49, 31))
line(screen, (0, 0, 0), (421, 451), (433, 455))
line(screen, (0, 0, 0), (445, 455), (458, 453))
lines(screen, (0, 0, 0), 0, [(432, 466), (436, 464), (447, 464), (454, 467)])
line(screen, (0, 0, 0), (373, 579), (373, 427))

pygame.display.update()
clock = pygame.time.Clock()
finished = False

while not finished:
    clock.tick(FPS)
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            finished = True

pygame.quit()
